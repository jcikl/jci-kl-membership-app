rules_version = '2';

// Firestore 数据库规则
service cloud.firestore {
  match /databases/{database}/documents {
    // 临时开发规则：允许所有访问（2025年10月10日到期）
    // 这个规则允许任何拥有Firestore数据库引用的人查看、编辑和删除所有数据
    // 它对于开始开发很有用，但配置为在30天后过期，因为它会让你的应用对攻击者开放
    // 请确保在该时间之前为你的应用编写安全规则，否则所有客户端请求都将被拒绝
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 10, 10);
    }
    
    // 详细的生产环境规则（当前被临时规则覆盖，但保留用于将来使用）
    /*
    // 会员集合规则
    match /members/{memberId} {
      // 允许认证用户读取和写入自己的会员信息
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.token.role in ['admin', 'moderator']);
      
      // 允许创建新会员记录
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // 活动集合规则
    match /events/{eventId} {
      // 所有认证用户都可以读取活动
      allow read: if request.auth != null;
      
      // 只有管理员和版主可以创建、更新、删除活动
      allow write: if request.auth != null && 
        request.auth.token.role in ['admin', 'moderator'];
    }
    
    // 活动报名集合规则
    match /eventRegistrations/{registrationId} {
      // 用户可以读取自己的报名记录
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // 用户可以创建自己的报名记录
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      
      // 管理员可以读取所有报名记录
      allow read: if request.auth != null && 
        request.auth.token.role in ['admin', 'moderator'];
    }
    
    // 财务记录集合规则
    match /financialRecords/{recordId} {
      // 只有管理员可以访问财务记录
      allow read, write: if request.auth != null && 
        request.auth.token.role == 'admin';
    }
    
    // 交易记录集合规则
    match /transactions/{transactionId} {
      // 所有认证用户都可以读取交易记录
      allow read: if request.auth != null;
      
      // 只有管理员、财务长和开发员可以创建、更新、删除交易记录
      allow write: if request.auth != null && 
        request.auth.token.role in ['admin', 'treasurer', 'developer'];
    }
    
    // 银行户口集合规则
    match /bank_accounts/{accountId} {
      // 所有认证用户都可以读取银行户口
      allow read: if request.auth != null;
      
      // 只有管理员、财务长和开发员可以创建、更新、删除银行户口
      allow write: if request.auth != null && 
        request.auth.token.role in ['admin', 'treasurer', 'developer'];
    }
    
    // 交易用途集合规则
    match /transaction_purposes/{purposeId} {
      // 所有认证用户都可以读取交易用途
      allow read: if request.auth != null;
      
      // 只有管理员、财务长和开发员可以创建、更新、删除交易用途
      allow write: if request.auth != null && 
        request.auth.token.role in ['admin', 'treasurer', 'developer'];
    }
    
    // 消息通知集合规则
    match /notifications/{notificationId} {
      // 用户可以读取发送给自己的通知
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.recipientId;
      
      // 管理员可以创建和读取所有通知
      allow write: if request.auth != null && 
        request.auth.token.role in ['admin', 'moderator'];
    }
    
    // 账单付款申请集合规则
    match /bill_payment_requests/{requestId} {
      // 所有认证用户都可以读取账单付款申请
      allow read: if request.auth != null;
      
      // 用户可以创建自己的账单付款申请
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.submitterId;
      
      // 用户可以更新自己的待审批申请
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.submitterId &&
        resource.data.status == 'pending';
      
      // 开发员、管理员和财务长可以审批、拒绝、支付申请
      // 注意：这里仍然使用 Firebase 令牌验证作为最后防线
      // 实际的权限验证在服务层通过户口资料进行
      allow update: if request.auth != null && 
        request.auth.token.role in ['developer', 'admin', 'treasurer'] &&
        request.resource.data.status in ['approved', 'rejected', 'paid'];
      
      // 开发员和管理员可以删除申请
      allow delete: if request.auth != null && 
        request.auth.token.role in ['developer', 'admin'];
    }
    */
  }
}

// Firebase Storage 安全规则
service firebase.storage {
  match /b/{bucket}/o {
    // 临时开发规则：允许所有访问（2025年10月10日到期）
    // 在生产环境中应该添加更严格的认证规则
    match /{allPaths=**} {
      allow read, write: if request.time < timestamp.date(2025, 10, 10);
    }
    
    // 更严格的生产环境规则（注释掉，需要时启用）
    /*
    match /event-covers/{fileName} {
      allow read: if true; // 任何人都可以读取
      allow write: if request.auth != null; // 只有认证用户可以上传
    }
    
    match /chapter-logos/{fileName} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /member-avatars/{fileName} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    */
  }
}
